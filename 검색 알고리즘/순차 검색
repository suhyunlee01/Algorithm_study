#include<stdio.h>

void main() {
	int arr[] = { 23,47,19,63,57,26,75,73,82,89,47,11 };
	int key = 75;  //특정 키값 75와 같은 것이 몇 번 째에 있는지 구하라 단 함수로 만들어라
	int index = -1;
	for (int i = 0; i < sizeof(arr) / sizeof(arr[0]); i++) { //array의 전체 바이트 값 나누기 array의 하나 값 = (4x12) / 4 = 12개
		if (arr[i] == key) {
			index = i;
			break;
		}
	}
	if (index == -1) { //for문 내에서 key값을 찾지 못해서 index가 설정한 초기값이라면
		printf("찾는 값은 없습니다.");
	}
	else {
		printf("찾는 값은 %d번째에 있어요.", index + 1);
	}
}

//위에서 작성한 코드를 함수형으로 바꾸어 보시오.

#include<stdio.h>

int fsearch(int* pArr, int arraySize, int keyValue) { //포인터 상수를 받기 위해 *pArr
	for (int i = 0; i < arraySize; i++) {
		if (pArr[i] == keyValue) {
			return i;
		}
	} return -1;
}

void main() {
	int arr[] = { 23,47,19,63,57,26,75,73,82,89,47,11 };
	int key = 75;  //특정 키값 75와 같은 것이 몇 번 째에 있는지 구하라 단 함수로 만들어라
	int index = -1;
	int size = sizeof(arr) / sizeof(arr[0]);

	index = fsearch(arr, size, key); //array의 이름은 포인터 상수이다.

	if (index == -1) { //for문 내에서 key값을 찾지 못해서 index가 설정한 초기값이라면
		printf("찾는 값은 없습니다.");
	}
	else {
		printf("찾는 값은 %d번째에 있어요.", index + 1);
	}
}
